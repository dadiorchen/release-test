# github action to release a new version of the package
name: Release

on:
  push:
    branches:
      - '*'


jobs:
  release:
    runs-on: ubuntu-latest
      # set dictory
    defaults:
      run:
        #directory is root of the project
        working-directory: .
    steps:
      # checkout the code
      - name: Checkout
        uses: actions/checkout@v2
          # display current directory
      - name: Display working directory
        run: pwd
          # print current branch
      - name: Print current branch
        run: echo $GITHUB_REF
        env:
          GITHUB_REF: ${{ github.ref }}
      # list files
      - name: List files
        run: ls -la
      # install node
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Read .releaserc
        run: echo ::set-output name=RELEASERC::$(cat .releaserc)
        id: releaserc
        # pritn the output
      - name: Print .nvmrc
        run: echo ${{ steps.releaserc.outputs.RELEASERC }}
        # quit if the version is not changed
      - name: Read .releaserc
        run: echo ::set-output name=RELEASE_NEEDED::$(echo `node -e 'console.log(require("./.releaserc.json").branches.map(e => e.name || e).reduce((a,c) => a || c === process.env.GITHUB_REF_NAME, false))'`)
        env:
          GITHUB_REF: ${{ github.ref }}
        id: release_needed
      - name: Print rn
        run: echo ${{ steps.release_needed.outputs.RELEASE_NEEDED }}
      - name: Quit if version is not changed
        if: steps.release_needed.outputs.RELEASE_NEEDED == 'false'
        run: echo "The branch is not configured to release. Quitting." && exit 0
      - name: Load channel
        run: echo ::set-output name=CHANNEL::$(echo `node -e ' process.env.GITHUB_REF_NAME === "master" ? console.log("master") :console.log(require("./.releaserc.json").branches.reduce((a,c) => a || c.name === process.env.GITHUB_REF_NAME  && c.channel, false))'`)
        id: channel
      - name: Print channel
        run: echo ${{ steps.channel.outputs.CHANNEL }}
